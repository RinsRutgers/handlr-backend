# Generated by Django 5.2.3 on 2025-06-28 15:24

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('projects', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PhotoUploadBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Photo Batch', max_length=255)),
                ('status', models.CharField(choices=[('uploading', 'Uploading'), ('analyzing', 'Analyzing QR Codes'), ('completed', 'Analysis Complete'), ('failed', 'Analysis Failed')], default='uploading', max_length=20)),
                ('total_photos', models.PositiveIntegerField(default=0)),
                ('processed_photos', models.PositiveIntegerField(default=0)),
                ('qr_codes_found', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processing_started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_batches', to='projects.project')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QRCardBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='QR Card Batch', max_length=255)),
                ('pdf', models.FileField(upload_to='qrcards/')),
                ('amount', models.PositiveIntegerField()),
                ('size', models.CharField(default='medium', max_length=20)),
                ('per_page', models.PositiveIntegerField(default=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qrcard_batches', to='projects.project')),
            ],
        ),
        migrations.CreateModel(
            name='QRCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('qr_url', models.URLField(blank=True, help_text='The URL encoded in the QR code', null=True)),
                ('pdf', models.FileField(blank=True, null=True, upload_to='qrcards/')),
                ('access_pin', models.CharField(help_text='PIN code for tourists to access their photos', max_length=6)),
                ('client_email', models.EmailField(blank=True, help_text="Tourist's email for photo delivery", max_length=254, null=True)),
                ('client_name', models.CharField(blank=True, help_text="Tourist's name", max_length=100, null=True)),
                ('client_phone', models.CharField(blank=True, help_text="Tourist's phone number", max_length=20, null=True)),
                ('session_notes', models.TextField(blank=True, help_text="Photographer's notes about the session", null=True)),
                ('location_name', models.CharField(blank=True, help_text='Specific location where photos were taken', max_length=200, null=True)),
                ('status', models.CharField(choices=[('distributed', 'Card Distributed'), ('scanned', 'QR Code Scanned'), ('info_provided', 'Client Info Provided'), ('photos_uploaded', 'Photos Uploaded'), ('completed', 'Completed - Photos Delivered')], default='distributed', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('scanned_at', models.DateTimeField(blank=True, help_text='When the QR code was first scanned', null=True)),
                ('info_provided_at', models.DateTimeField(blank=True, help_text='When client provided their info', null=True)),
                ('photos_uploaded_at', models.DateTimeField(blank=True, help_text='When photos were uploaded', null=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='When photos were delivered to client', null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qrcards', to='projects.project')),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qrcards', to='qr.qrcardbatch')),
            ],
        ),
        migrations.CreateModel(
            name='QRCardPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='qr_photos/%Y/%m/%d/')),
                ('original_filename', models.CharField(help_text='Original filename when uploaded', max_length=255)),
                ('taken_at', models.DateTimeField(blank=True, help_text='When the photo was taken (if available)', null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('is_processed', models.BooleanField(default=False, help_text='Whether photo has been processed/optimized')),
                ('qr_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='qr.qrcard')),
            ],
            options={
                'ordering': ['uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='RawPhotoUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='raw_photos/%Y/%m/%d/')),
                ('original_filename', models.CharField(max_length=255)),
                ('taken_at', models.DateTimeField(blank=True, help_text='Extracted from EXIF data', null=True)),
                ('camera_make', models.CharField(blank=True, max_length=100, null=True)),
                ('camera_model', models.CharField(blank=True, max_length=100, null=True)),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('is_processed', models.BooleanField(default=False)),
                ('has_qr_code', models.BooleanField(default=False)),
                ('qr_code_data', models.TextField(blank=True, help_text='Decoded QR code content', null=True)),
                ('processing_error', models.TextField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_qr_card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='raw_source_photos', to='qr.qrcard')),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='raw_photos', to='qr.photouploadbatch')),
            ],
            options={
                'ordering': ['taken_at', 'uploaded_at'],
            },
        ),
    ]
